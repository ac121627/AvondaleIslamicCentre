@using AvondaleIslamicCentre.Models
@model PaginatedList<Hall>

@{
    ViewData["Title"] = "Halls";
    var currentSort = (string)ViewData["CurrentSort"] ?? "";
    var currentFilter = (string)ViewData["CurrentFilter"] ?? "";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <h1 class="page-title">Halls</h1>
        <small class="page-subtitle">Available spaces and capacities</small>
    </div>
    <div class="d-flex align-items-center">
        <form method="get" class="search-wrapper mb-0">
            <div class="input-group search-input">
                <input type="text" name="searchString" value="@currentFilter" placeholder="Search halls..." class="form-control" />
                <input type="hidden" name="sortOrder" value="@currentSort" />
                <button class="btn btn-secondary search-btn" type="submit"><i class="bi bi-search"></i>Search</button>
            </div>
        </form>
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-create ms-3">Create New Hall</a>
        }
    </div>
</div>
<div class="row g-3">
    @if (!Model.Any())
    {
        <div class="col-12">
            <div class="alert alert-light">No halls found.</div>
        </div>
    }
    else
    {
        foreach (var item in Model)
        {
            <div class="col-12 col-md-6 col-lg-4">
                <div class="card shadow-sm mb-2">
                    <div class="card-body">
                        <h5 class="card-title text-success">@Html.DisplayFor(m => item.Name)</h5>
                        <p class="card-text small-muted mb-2">Capacity: <strong>@Html.DisplayFor(m => item.Capacity)</strong></p>
                        <div class="d-flex justify-content-end">
                            @if (User.IsInRole("Admin"))
                            {
                                <a asp-action="Edit" asp-route-id="@item.HallId" class="btn btn-edit btn-sm">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.HallId" class="btn btn-details btn-sm ms-1">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.HallId" class="btn btn-delete btn-sm ms-1">Delete</a>
                            }
                            else
                            {
                                <a asp-action="Details" asp-route-id="@item.HallId" class="btn btn-details btn-sm">Details</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-sortOrder="@currentSort" asp-route-searchString="@currentFilter">Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i"
                   asp-route-sortOrder="@currentSort" asp-route-searchString="@currentFilter">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-sortOrder="@currentSort" asp-route-searchString="@currentFilter">Next</a>
        </li>
    </ul>
</nav>